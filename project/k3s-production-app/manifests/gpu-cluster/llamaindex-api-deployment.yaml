apiVersion: apps/v1
kind: Deployment
metadata:
  name: llamaindex-api
  namespace: ai-services
spec:
  replicas: 2
  selector:
    matchLabels:
      app: llamaindex-api
  template:
    metadata:
      labels:
        app: llamaindex-api
    spec:
      containers:
      - name: llamaindex-api
        image: llamaindex-api:latest
        ports:
        - containerPort: 8000
        env:
        - name: OLLAMA_BASE_URL
          value: "http://ollama-service:11434"
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: openai-api-key
              optional: true
        - name: PYTHONPATH
          value: "/app"
        - name: ENVIRONMENT
          value: "production"
        resources:
          limits:
            nvidia.com/gpu: 1
            memory: "4Gi"
            cpu: "2"
          requests:
            nvidia.com/gpu: 1
            memory: "2Gi"
            cpu: "1"
        volumeMounts:
        - name: llamaindex-data
          mountPath: /app/data
        - name: llamaindex-cache
          mountPath: /app/cache
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: llamaindex-data
        persistentVolumeClaim:
          claimName: llamaindex-data-pvc
      - name: llamaindex-cache
        persistentVolumeClaim:
          claimName: llamaindex-cache-pvc
      nodeSelector:
        node-type: gpu
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: llamaindex-data-pvc
  namespace: ai-services
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: llamaindex-cache-pvc
  namespace: ai-services
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: llamaindex-api-service
  namespace: ai-services
spec:
  type: NodePort
  selector:
    app: llamaindex-api
  ports:
  - port: 8000
    targetPort: 8000
    nodePort: 31800
---
apiVersion: v1
kind: Secret
metadata:
  name: api-keys
  namespace: ai-services
type: Opaque
data:
  # Base64 encoded API keys - replace with actual values
  openai-api-key: ""  # echo -n "your-openai-api-key" | base64
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: llamaindex-config
  namespace: ai-services
data:
  config.yaml: |
    app:
      title: "LlamaIndex FastAPI Server"
      description: "AI-powered document processing and query API"
      version: "1.0.0"
    
    ollama:
      base_url: "http://ollama-service:11434"
      model: "llama2"
      
    storage:
      data_path: "/app/data"
      cache_path: "/app/cache"
      
    embedding:
      model: "sentence-transformers/all-MiniLM-L6-v2"
      
    logging:
      level: "INFO"
      format: "json"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: llamaindex-api-ingress
  namespace: ai-services
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.middlewares: "default-cors@kubernetescrd"
spec:
  rules:
  - host: api.llamaindex.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: llamaindex-api-service
            port:
              number: 8000
